// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuoraForPucit;

#nullable disable

namespace QuoraForPucit.Migrations
{
    [DbContext(typeof(QuoraForPucit_DBContext))]
    [Migration("20220823132218_Initial Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("QuoraForPucit.Models.AComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("UserId");

                    b.ToTable("A_Comments", (string)null);
                });

            modelBuilder.Entity("QuoraForPucit.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AnswerDescription")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("AnswererId")
                        .HasColumnType("int");

                    b.Property<string>("AnswererName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime");

                    b.Property<int?>("Upvote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.HasIndex("AnswererId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("QuoraForPucit.Models.AnswerUpvoter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.Property<int>("UpvoteStatus")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("UserId");

                    b.ToTable("AnswerUpvoter", (string)null);
                });

            modelBuilder.Entity("QuoraForPucit.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("QuestionaireId")
                        .HasColumnType("int");

                    b.Property<string>("QuestionaireName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Upvote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.HasIndex("QuestionaireId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("QuoraForPucit.Models.QuestionsUpvoter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("UpvoteStatus")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("QuestionsUpvoters");
                });

            modelBuilder.Entity("QuoraForPucit.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("About")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Github")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProfilePicture")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Twitter")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Website")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("QuoraForPucit.QComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("QCommenterId")
                        .HasColumnType("int")
                        .HasColumnName("Q_CommenterId");

                    b.Property<string>("QcommenterName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("QCommenterName");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QCommenterId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Q_Comments", (string)null);
                });

            modelBuilder.Entity("QuoraForPucit.Models.AComment", b =>
                {
                    b.HasOne("QuoraForPucit.Models.Answer", "Answer")
                        .WithMany("AComments")
                        .HasForeignKey("AnswerId")
                        .IsRequired()
                        .HasConstraintName("FK_A_Comments_Answers");

                    b.HasOne("QuoraForPucit.Models.User", "User")
                        .WithMany("AComments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_A_Comments_Users");

                    b.Navigation("Answer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuoraForPucit.Models.Answer", b =>
                {
                    b.HasOne("QuoraForPucit.Models.User", "Answerer")
                        .WithMany("Answers")
                        .HasForeignKey("AnswererId")
                        .IsRequired()
                        .HasConstraintName("FK_Answers_Users");

                    b.HasOne("QuoraForPucit.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK_Answers_Questions");

                    b.Navigation("Answerer");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("QuoraForPucit.Models.AnswerUpvoter", b =>
                {
                    b.HasOne("QuoraForPucit.Models.Answer", "Answer")
                        .WithMany("AnswerUpvoters")
                        .HasForeignKey("AnswerId")
                        .IsRequired()
                        .HasConstraintName("FK_AnswerUpvoters_Answer");

                    b.HasOne("QuoraForPucit.Models.User", "User")
                        .WithMany("AnswerUpvoters")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_AnswerUpvoters_User");

                    b.Navigation("Answer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuoraForPucit.Models.Question", b =>
                {
                    b.HasOne("QuoraForPucit.Models.User", "Questionaire")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionaireId")
                        .IsRequired()
                        .HasConstraintName("FK_Questions_ToTable");

                    b.Navigation("Questionaire");
                });

            modelBuilder.Entity("QuoraForPucit.Models.QuestionsUpvoter", b =>
                {
                    b.HasOne("QuoraForPucit.Models.Question", "Question")
                        .WithMany("QuestionsUpvoters")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK_QuestionsUpvoters_Question");

                    b.HasOne("QuoraForPucit.Models.User", "User")
                        .WithMany("QuestionsUpvoters")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_QuestionsUpvoters_User");

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuoraForPucit.QComment", b =>
                {
                    b.HasOne("QuoraForPucit.Models.User", "QCommenter")
                        .WithMany("QComments")
                        .HasForeignKey("QCommenterId")
                        .IsRequired()
                        .HasConstraintName("FK_Q_Comments_Users");

                    b.HasOne("QuoraForPucit.Models.Question", "Question")
                        .WithMany("QComments")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK_Q_Comments_Questions");

                    b.Navigation("QCommenter");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("QuoraForPucit.Models.Answer", b =>
                {
                    b.Navigation("AComments");

                    b.Navigation("AnswerUpvoters");
                });

            modelBuilder.Entity("QuoraForPucit.Models.Question", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("QComments");

                    b.Navigation("QuestionsUpvoters");
                });

            modelBuilder.Entity("QuoraForPucit.Models.User", b =>
                {
                    b.Navigation("AComments");

                    b.Navigation("AnswerUpvoters");

                    b.Navigation("Answers");

                    b.Navigation("QComments");

                    b.Navigation("Questions");

                    b.Navigation("QuestionsUpvoters");
                });
#pragma warning restore 612, 618
        }
    }
}
